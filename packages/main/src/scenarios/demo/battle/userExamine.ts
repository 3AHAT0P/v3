import { logerror } from '@text-game/shared/Logger';
import { buildMessage } from '../../_utils/buildMessage';
import { ScenarioHandler } from '../../ScenarioHandler';
import { Enemy } from './Enemy';
import { enemiesTurn } from './enemiesTurn';

export const userExamine: ScenarioHandler = async (userInfo, { enemy }: { enemy?: Enemy; } = {}) => {
  if (enemy == null) throw new Error('Enemy is null');

  const text = `${enemy.type === 'Rat' ? '–û–±—ã—á–Ω–∞—è –∫—Ä—ã—Å–∞.\n' : '???\n'}`
    + ` * –û—á–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è(‚ù§Ô∏è) - ${enemy.healthPoints}\n`
    + ` * –°–∏–ª–∞ —É–¥–∞—Ä–∞(üó°) - ${enemy.attack}\n`;

  try {
    await userInfo.sendMessage(buildMessage(text, []));
  } catch (error) {
    logerror('Demo::battle::userAttack', error);
  }

  return enemiesTurn(userInfo);
};
